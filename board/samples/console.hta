<html><!--xmlns:v-->
<head>
  <title>Exempel på Grafiskt interface</title>
    <HTA:APPLICATION ID="oHTA"
     APPLICATIONNAME="communication.bas"
     BORDERSTYLE="normal"
     CAPTION="yes"
     ICON=""
     MAXIMIZEBUTTON="yes"
     MINIMIZEBUTTON="yes"
     SHOWINTASKBAR="yes"
     SINGLEINSTANCE="yes"
     SYSMENU="yes"
     VERSION="1.0"
     WINDOWSTATE="normal"/>
     
   <!-- <?import namespace="v" implementation="#default#VML" ?>
	<style> v\:shape { behavior:url(#default#VML); display:inline-block; } </style>-->
     
	<style type="text/css">
		body {
			font-family: arial;
			font-size: 12pt;
			color: navy;
			background-color: blue;
		}
		
		#pageroot {
			background-color: white;
			border: 1px solid black;
			margin:10pt;
			padding: 10pt;
			height: 100%;
			width: 100%;
		}
		
		#inputs {
			border: 1px dashed gray;
			width: 200px;
			height: 350px;
			
		}
		
		#dashBoardContainer {
			border: 1px dashed gray;
			width: 450px;
			position: relative;
			float:left;
			left: 0px;
			top: 0px;
			height:500px;
		}
		#rightMirrorContainer {
			border: 1px dashed gray;
			width: 400px;
			/*position: relative;
			float:right;*/
			left: 0px;
			top: 0px;
			height:500px;
		}
		
		
		#main {
			border: 0px solid black;
			position: relative;
			min-width: 750px;
		}
		
		.arrows {
			 fillcolor: #FFED9E;
		}
		
	</style>
  <script type="text/javascript">
  	var picaxeSettings = {
		  	logRootNode: "logContainer",
	  		comportSelectId: "comport",
	  		protocolFile: "protocol.js",
	  		handshaking: 1 // använd Xon, Xoff
	  		/*,connectionSettings: "38400,N,8,1"*/ //,connectionSettings: "9600,N,8,1" // av kommentera om du ändrar processor frekvensen till 8Mhz
	  	};
	  	
  </script>
  <script type="text/javascript" src="helpers.js"></script>
  <script type="text/javascript" src="picaxeinterface.js"></script>

  <script type="text/javascript">
  
  	  addOnDOMLoad(function(){
	  	  // connecta så vi får response på vad picaxe säger
	  	  var func = picaxe.messenger;
	  	  picaxe.messenger = function(msg){
		  	  
		  	  var reciever = document.getElementById('reciever');
		  	  // ersätt controll chars
		  	  var newMsg = "";
		  	  for(var i = 0; i < msg.length; ++i){
			  	  	if (msg.charCodeAt(i) < 32) {
				  	  	newMsg += "{" + msg.charCodeAt(i)+ "}"; 
				  	  	if (msg.charCodeAt(i) == 10) {
					  	  	newMsg += "\n"
				  	  	}
			  	  	} else {
				  	  	newMsg += msg.charAt(i);
			  	  	}
		  	  }
		  	  
		  	  // trimma bort för många rader
		  	  var value = reciever.value;
		  	  var values = value.split("\n");
		  	  if (values.length > 40){
		  		  values = values.slice(1);
		  		  value = values.join("\n");
	  	  	  }	
	  	  	  
		  	  reciever.value = value + newMsg;
		  	  reciever.scrollTop = reciever.scrollHeight;
		  	  func(msg); // anropa den gamla funktionen
	  	  }
	  	  
	  	  var textarea = document.getElementById('reciever');
	  	  textarea.value = "";
	  	  
	  	  document.getElementById('commandbox').focus();
	  });
  
	  	function sendCommand(){
	  		var inputbox = document.getElementById('commandbox');
	  		if (inputbox.value) {
	  			var value = inputbox.value;
	  			if (document.getElementById("numbersToByte").checked){
	  				var arr = value.split("{");
	  				for(var i = 1; i < arr.length; i++){
	  					var idx = arr[i].indexOf('}');
	  					if (idx < 1){
	  						alert("Du har inte angett en slut  hakparantes\r\n nummer måste inneslutas med dessa {0-255}");
	  						return;
	  					}
	  					
	  					var num = Number(arr[i].substring(0, idx));
	  					arr[i] = String.fromCharCode(num) + arr[i].substr(idx + 1);
	  				}
	  				
	  				value = arr.join('');
	  			}
	  			
	  			picaxe.commandToPicaxe(value);
  			}
	  		
	  	}
	  
	  addOnDOMLoad(function() {
		// stoppa loggning om den inte är checkad	
	  	setTimeout(function(){picaxe.log.setActive(document.forms[0].elements["logCheckbox"].checked)}, 200);
	  });
  
  </script>
</head>
<body>
  <form id="pageroot" onsubmit="sendCommand();return false;">
    <h3>Skicka kommandon</h3>
    Använd handskakning när du kommunicerar med kortet (krävs för nätverk) 
    <input type="checkbox" id="handshake" checked="true" onclick="picaxe.setHandshaking(this.checked)"/> <br/><br/>
    <div>
	    <select id="comport" onchange="picaxe.setComport(this.value)">
	    	<option value="0">Ej vald</option>
	    	<option value="1">Com 1</option>
	    	<option value="2">Com 2</option>
	    	<option value="3">Com 3</option>
	    	<option value="4">Com 4</option>
	    	<option value="5">Com 5</option>
	    	<option value="6">Com 6</option>
	    	<option value="7">Com 7</option>
	    	<option value="8">Com 8</option>
	    	<option value="9">Com 9</option>
	    	<option value="10">Com 10</option>
	    	<option value="11">Com 11</option>
	    	<option value="12">Com 12</option>
	    	<option value="13">Com 13</option>
	    	<option value="14">Com 14</option>
	    	<option value="15">Com 15</option>
	    	<option value="16">Com 16</option>
	    </select> &nbsp; &nbsp; 
	    Processor hastighet (setfreq kommando i picaxe kod)
	    <select id="speed" onchange="picaxe.setConnectionSettings(this.value)">
	    	<option value="4800,N,8,1">Standard (4Mhz)</option>
	    	<option value="9600,N,8,1">setfreq m8 (8Mhz)</option>
	    	<option value="19200,N,8,1">setfreq m16 (16Mhz)</option>
	    	<option value="38400,N,8,1">setfreq m32 (32Mhz)</option>
	    </select> <br/><br/>
 
  		
  	</div>
  	<div id="main">
		<div class="instrument">
			Svar från picaxe &nbsp; &nbsp; 
			<input type="checkbox" onclick="picaxe.log.setActive(this.checked)" name="logCheckbox" /><!--checked="true"-->
  			<label for="logCheckbox">Logga trafiken mellan dator och picaxe</label><br/>
			<textarea id="reciever" readonly="true" cols="70" rows="15"></textarea><br/>
			Skicka till picaxe: <input type="text" id="commandbox" value="" />
			<input type="button" value="Skicka" onclick="sendCommand()"/><br/>
			Gör om siffror inom {} till ett ascii värde innan det skickas
			<input type="checkbox" id="numbersToByte" checked="true"/><br/><br/>
		</div>
	</div>
	<div id="logContainer"></div>
	<pre id="debug"></pre>
  </form>
</body>
</html>
